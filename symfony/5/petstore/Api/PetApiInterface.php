<?php
/**
 * PetApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swagger Petstore - OpenAPI 3.0
 *
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\ApiResponse;
use OpenAPI\Server\Model\Pet;

/**
 * PetApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface PetApiInterface
{

    /**
     * Sets authentication method petstore_auth
     *
     * @param string $value Value of the petstore_auth authentication method.
     *
     * @return void
     */
    public function setpetstore_auth($value);

    /**
     * Sets authentication method api_key
     *
     * @param string $value Value of the api_key authentication method.
     *
     * @return void
     */
    public function setapi_key($value);

    /**
     * Operation addPet
     *
     * Add a new pet to the store
     *
     * @param  \OpenAPI\Server\Model\Pet $pet  Create a new pet in the store (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Pet
     */
    public function addPet(Pet $pet, &$responseCode, array &$responseHeaders): array|\OpenAPI\Server\Model\Pet;


    /**
     * Operation deletePet
     *
     * Deletes a pet
     *
     * @param  \int $petId  Pet id to delete (required)
     * @param  \string $apiKey   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deletePet($petId, $apiKey = null, &$responseCode, array &$responseHeaders): void;


    /**
     * Operation findPetsByStatus
     *
     * Finds Pets by status
     *
     * @param  \string $status  Status values that need to be considered for filter (optional, default to 'available')
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Pet[]
     */
    public function findPetsByStatus($status = 'available', &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation findPetsByTags
     *
     * Finds Pets by tags
     *
     * @param  \string[] $tags  Tags to filter by (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Pet[]
     */
    public function findPetsByTags(array $tags = null, &$responseCode, array &$responseHeaders): iterable;


    /**
     * Operation getPetById
     *
     * Find pet by ID
     *
     * @param  \int $petId  ID of pet to return (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Pet
     */
    public function getPetById($petId, &$responseCode, array &$responseHeaders): array|\OpenAPI\Server\Model\Pet;


    /**
     * Operation updatePet
     *
     * Update an existing pet
     *
     * @param  \OpenAPI\Server\Model\Pet $pet  Update an existent pet in the store (required)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Pet
     */
    public function updatePet(Pet $pet, &$responseCode, array &$responseHeaders): array|\OpenAPI\Server\Model\Pet;


    /**
     * Operation updatePetWithForm
     *
     * Updates a pet in the store with form data
     *
     * @param  \int $petId  ID of pet that needs to be updated (required)
     * @param  \string $name  Name of pet that needs to be updated (optional)
     * @param  \string $status  Status of pet that needs to be updated (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function updatePetWithForm($petId, $name = null, $status = null, &$responseCode, array &$responseHeaders): void;


    /**
     * Operation uploadFile
     *
     * uploads an image
     *
     * @param  \int $petId  ID of pet to update (required)
     * @param  \string $additionalMetadata  Additional Metadata (optional)
     * @param  \UploadedFile $body   (optional)
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ApiResponse
     */
    public function uploadFile($petId, $additionalMetadata = null, UploadedFile $body = null, &$responseCode, array &$responseHeaders): array|\OpenAPI\Server\Model\ApiResponse;

}
